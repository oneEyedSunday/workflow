{"version":3,"sources":["/./src/app/shared/interfaces/document.ts","/./src/app/shared/interfaces/group.ts","/./src/app/shared/interfaces/index.ts","/./src/app/shared/interfaces/process.ts","/./src/app/shared/interfaces/stage.ts","/./src/app/shared/interfaces/task.ts"],"names":[],"mappings":";;;;;;;;;;AAOA;AAAA;AAAA;IAKE;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IACH,eAAC;AAAD,CAAC;;;;;;;;;;;;;;ACPD;AAAA;AAAA;IACE,eAAY,QAA0B;QACpC,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;YACxC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;SACvC;IACH,CAAC;;;;IAKH,YAAC;CAAA;AAXiB;;;;;;;;;;;;;ACRlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuB;AACC;AACE;AACC;AAEH;;;;;;;;;;;;;ACLxB;AAAA;AAAA;AAAA;AAAgC;AACF;AAY9B;IAQI;QACI,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG;YACV,IAAI,4CAAK,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,CAAE,IAAI,0CAAI,EAAE,EAAE,IAAI,0CAAI,EAAE,CAAE,EAAE,CAAC;YACpE,IAAI,4CAAK,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;SAC5C,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC;QAChE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvC,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;IAClG,CAAC;IACL,cAAC;AAAD,CAAC;;;;;;;;;;;;;;ACxBD;AAAA;AAAA;IAGI,eAAY,OAAgB;QACxB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC;QAClD,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;IAC9C,CAAC;;;;IACL,YAAC;CAAA;AAPiB;;;;;;;;;;;;;ACAlB;AAAA;AAAA;IAII,cAAY,OAAe;QACvB,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC;QACrC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;IAClD,CAAC;;;;IACL,WAAC;CAAA;AATgB","file":"common-es5.js","sourcesContent":["interface IDocument {\n  id: number;\n  filename: string;\n  link: string;\n  description: string;\n}\n\nexport class Document implements IDocument {\n  id: number;\n  filename: string;\n  link: string;\n  description: string;\n  constructor() {\n    this.filename = '';\n  }\n}\n\n","export interface IGroup {\n  id: number;\n  organization: number;\n  group_name: string;\n  description: string;\n}\n\n\nexport class Group implements IGroup {\n  constructor(groupObj?: Partial<IGroup>) {\n    if (groupObj) {\n      this.description = groupObj.description;\n      this.group_name = groupObj.group_name;\n    }\n  }\n  id;\n  organization;\n  group_name;\n  description;\n}\n","export * from './task';\nexport * from './stage';\nexport * from './process';\nexport * from './document';\nexport * from './user';\nexport * from './group';\n","import { Stage } from './stage';\nimport { Task } from './task';\n\ninterface IProcess {\n    processsId?: number;\n    stages: Stage[];\n    name: string;\n    organizationId: number;\n    description: string;\n    lastUpdatedAt: string;\n    status: string; // TODO (oneeyedsunday) convert to enums\n}\n\nexport class Process implements IProcess {\n    name: string;\n    stages;\n    processId;\n    description;\n    organizationId;\n    lastUpdatedAt;\n    status;\n    constructor() {\n        this.name = 'Demo Process';\n        this.stages = [\n            new Stage({ name: 'Demo Stage', tasks: [ new Task(), new Task() ] }),\n            new Stage({ name: 'Stage 2', tasks: [] })\n        ];\n        this.status = Math.random() > 0.46 ? 'In progress' : 'Complete';\n        this.description = Array(40).fill('a');\n        this.lastUpdatedAt = new Date(Date.now() - 250000 * Math.random() * 10 * Math.random() * 100);\n    }\n}\n","import { Task } from './task';\n\ninterface IStage {\n    name: string;\n    tasks: Task[];\n}\n\nexport class Stage implements IStage {\n    name;\n    tasks;\n    constructor(initObj?: IStage) {\n        this.name = initObj ? initObj.name : 'Demo Stage';\n        this.tasks = initObj ? initObj.tasks : [];\n    }\n}\n","interface ITask {\n    taskId?: number;\n    summary: string;\n    status: string; // TODO update to enum\n}\n\n\nexport class Task implements ITask {\n    taskId;\n    summary;\n    status;\n    constructor(initObj?: ITask) {\n        this.summary = 'Send Reports to HOD';\n        this.status = 'ongoing';\n        this.taskId = initObj ? initObj.taskId : null;\n    }\n}\n"],"sourceRoot":""}